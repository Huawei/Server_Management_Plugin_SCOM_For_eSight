; Script generated by the HM NIS Edit Script Wizard.

Var /GLOBAL IC_DN40 #.Net frameworker 4.0
Var /GLOBAL IC_SCOM #SCOM Server

; HM NIS Edit Wizard helper defines
!define SOURCEDIR "..\Release"
!define PRODUCT_NAME "Huawei SCOM Plugin For eSight"
!define PRODUCT_VERSION "1.0"
!define PRODUCT_PUBLISHER "Huawei Technologies Co., Ltd."
!define PRODUCT_WEB_SITE "http://www.huawei.com"
;!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\Huawei.SCOM.ESightPlugin.Service.exe"
!define PRODUCT_UNINST_KEY "Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define PATH_KEY "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"

RequestExecutionLevel admin
Unicode true
; MUI 1.67 compatible ------
!include "MUI.nsh"
!include "WordFunc.nsh"
!include "WinMessages.nsh"
!include "WinCore.nsh"
!include "x64.nsh"
!include "nsProcess.nsh"
!include "StrFunc.nsh"
!include "nsDialogs.nsh"
!include "TextFunc.nsh"
!include "LogicLib.nsh"
!include "Ports.nsh"


; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"
; Welcome page
!insertmacro MUI_PAGE_WELCOME


; License page
;!define MUI_LICENSEPAGE_CHECKBOX
;!insertmacro MUI_PAGE_LICENSE "..\Desktop\License.txt"
; Directory page


!insertmacro MUI_PAGE_DIRECTORY 

Page Custom fnc_test_Show checkInput
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES

; Finish page
;!define MUI_FINISHPAGE_RUN "$INSTDIR\Configuration\Huawei.SCOMPlugin.Client"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"



LangString Lan_CheckNF_Msg ${LANG_ENGLISH} "You must install Microsoft .NET Framework 4.0 or above."
LangString Lan_CheckSCOM_Msg ${LANG_ENGLISH} "You must install SCOM 2012 or above."
LangString Lan_CheckSCOMIsRuning_Msg ${LANG_ENGLISH} "Microsoft.EnterpriseManagement.Monitoring.Console.exe is running, please close it first."
LangString Lan_keepESight_Msg ${LANG_ENGLISH} "Do you want to keep the eSight configuration?"
LangString Lan_keepIIS_Msg ${LANG_ENGLISH} "Do you want to uninstall the IIS Express installtion?"
LangString Lan_Uninstall_Msg ${LANG_ENGLISH} "has been removed successfully from your computer."
; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "Huawei_SCOM_Plugin_For_eSight_Setup_${PRODUCT_VERSION}.exe"
InstallDir "$PROGRAMFILES\Huawei SCOM Plugin For eSight"
;InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show
BrandingText "HUAWEI"

Var ip
Var port

/*--------------------Start----------------------------*/

Section "MainSection" SEC01
  Call CheckSCOM
  Call CheckNF

  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  File /r "${SOURCEDIR}\"

  DetailPrint "Start Install Management Packs"
  
  nsExec::ExecToLog '"$INSTDIR\Configuration\Huawei.SCOM.ESightPlugin.PackageHelper.exe" /i /port=$port /ip=$ip'
  
  DetailPrint "Install Management Packs Finish"
  RMDir /r "$INSTDIR\MPFiles\Temp"
  RMDir /r "$INSTDIR\MPResources.resources"
  
  ;ExecWait 'cmd'
 SectionEnd

Section -Post

  WriteUninstaller "$INSTDIR\uninst.exe"
 ; WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\Configuration\Huawei.SCOMPlugin.WindowsService.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"  
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PATH_KEY}" "ESIGHTSCOMPLUGIN" "$INSTDIR"
  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 "STR:Environment"
SectionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) $(Lan_Uninstall_Msg)"
FunctionEnd

var KeepESightData
var KeepIISExpress

Function un.onInit
  ${nsProcess::FindProcess} "Microsoft.EnterpriseManagement.Monitoring.Console.exe" $R0
  StrCmp $R0 "0" On_Abort End
  On_Abort:
	MessageBox MB_USERICON|MB_OK|MB_TOPMOST "$(Lan_CheckSCOMIsRuning_Msg)"
	Abort
  End:

  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to remove $(^Name)?" IDYES keep IDNO none
  keep:
      MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "$(Lan_keepESight_Msg)" IDYES keepESight IDNO deleteESight
         keepESight:
           StrCpy $KeepESightData "1"
           goto isUninstallIISExpress
         deleteESight:
           goto isUninstallIISExpress
         isUninstallIISExpress:
              MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "$(Lan_keepIIS_Msg)" IDYES deleteIIS IDNO keepIIS
                  keepIIS:
                    StrCpy $KeepIISExpress "1"
                    goto go
                  deleteIIS:
                    goto go
  none:
       Abort
  go: 
  
FunctionEnd

Section Uninstall

  DetailPrint "DeleteRegKey...${PRODUCT_UNINST_KEY}"
  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  ${If} $KeepESightData == "1"
        ${If} $KeepIISExpress == "1"
            nsExec::ExecToLog '"$INSTDIR\Configuration\Huawei.SCOM.ESightPlugin.PackageHelper.exe" /u /keepESight=true /keepIISExpress=true'
        ${Else}
            nsExec::ExecToLog '"$INSTDIR\Configuration\Huawei.SCOM.ESightPlugin.PackageHelper.exe" /u /keepESight=true /keepIISExpress=false'
        ${EndIf}
  ${Else}
         ${If} $KeepIISExpress == "1"
            nsExec::ExecToLog '"$INSTDIR\Configuration\Huawei.SCOM.ESightPlugin.PackageHelper.exe" /u /keepESight=false /keepIISExpress=true'
        ${Else}
            nsExec::ExecToLog '"$INSTDIR\Configuration\Huawei.SCOM.ESightPlugin.PackageHelper.exe" /u /keepESight=false /keepIISExpress=false'
        ${EndIf}
  ${EndIf}

  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\install.log"
  Delete "$INSTDIR\InstallUtil.InstallLog"
  Delete "$INSTDIR\iisexpress_amd64_en-US.install.log"
  Delete "$INSTDIR\iisexpress_amd64_en-US.uninstall.log"
  RMDir /r "$INSTDIR\WebServer"
  RMDir /r "$INSTDIR\MPFiles"
  RMDir /r "$INSTDIR\Configuration"
  ${If} $KeepESightData != "1"
        RMDir /r "$INSTDIR\KN"
  ${EndIf}

  DetailPrint "ESIGHTSCOMPLUGIN..."
  DeleteRegValue ${PRODUCT_UNINST_ROOT_KEY} "${PATH_KEY}" "ESIGHTSCOMPLUGIN"
  ;ExecWait 'cmd'
  SetAutoClose true
SectionEnd

Function .onInit
  ;Call CheckSCOMPlugin
	;!insertmacro MUI_LANGDLL_DISPLAY
	Call CheckOS
	Call CheckSCOMPluginIsInstall
FunctionEnd

Function .onInstSuccess
	
FunctionEnd

Function .onGUIEnd
     nsExec::ExecToLog 'net start "Huawei SCOM Plugin For eSight.Service"'
FunctionEnd
 

Var hCtl_test
Var hCtl_test_TextBox1
Var hCtl_test_Label1
Var hCtl_test_TextBox2
Var hCtl_test_Label2
; dialog create function
Function fnc_test_Create

  ; === test (type: Dialog) ===
  nsDialogs::Create 1018
  Pop $hCtl_test
  ${If} $hCtl_test == error
    Abort
  ${EndIf}
  !insertmacro MUI_HEADER_TEXT "IP/Port Configuration" "Please enter the ip address and port(44300-44399) of your computer which will be used to connect to eSight server."

   ; === TextBox2 (type: Text) ===
  ${NSD_CreateText} 108.4u 33.67u 77.24u 14u ""
  Pop $hCtl_test_TextBox2
  ;${NSD_OnChange} $hCtl_test_TextBox2 ipCheck
  ; === Label2 (type: Label) ===
  ${NSD_CreateLabel} 93.4u 35.67u 41.33u 16u "IP:"
  Pop $hCtl_test_Label2
  
  ; === TextBox1 (type: Text) ===
  ${NSD_CreateNumber} 108.4u 55.67u 77.24u 14u "44301"
  Pop $hCtl_test_TextBox1
  StrCpy $port "44301"
  ;${NSD_OnChange} $hCtl_test_TextBox1 portChange
  ; === Label1 (type: Label) ===
  ${NSD_CreateLabel} 84.4u 57.67u 41.33u 16u " Port:"
  Pop $hCtl_test_Label1

FunctionEnd

; dialog show function
Function fnc_test_Show
  Call fnc_test_Create
  nsDialogs::Show
  
FunctionEnd

Function ipCheck
  ;Pop $1 # $1 == $ Text
  ;${NSD_GetText} $1 $0
  ;StrCpy $port $0
  ${NSD_GetText} $hCtl_test_TextBox2 $ip
  ${if} $ip == ""
     MessageBox MB_USERICON|MB_OK  "The IP can't be empty!"
       Abort
  ${endif}
 ${WordFind} $ip "." "*" $R0
 
 ${If} $R0 != 3
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
 ${WordFind2X} $ip "." "." "-1{{" $R1
 ${WordFind2X} $ip "." "." "-1" $R2
 ${WordFind2X} $ip "." "." "-1}}" $R5
 ${WordFind} $R5 "." "-1{" $R3
 ${WordFind} $R5 "." "-1}" $R4
 
 ${StrFilter} $R1 "1" "" "" $R5
 ${If} $R5 != $R1
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
 
 ${StrFilter} $R2 "1" "" "" $R5
 ${If} $R5 != $R2
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
 
 ${StrFilter} $R3 "1" "" "" $R5
 ${If} $R5 != $R3
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
 
 ${StrFilter} $R4 "1" "" "" $R5
 ${If} $R5 != $R4
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
 
 
 
 ${If} $R1 L> 255
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
  ${If} $R1 L< 0
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
 ${If} $R2 L> 255
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
  ${If} $R2 L< 0
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
 ${If} $R3 L> 255
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
  ${If} $R3 L< 0
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
 ${If} $R4 L> 255
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}
  ${If} $R5 L< 0
  MessageBox MB_USERICON|MB_OK  "Please enter a valid IP!"
       Abort
 ${endif}

FunctionEnd
Function portCheck
  ${NSD_GetText} $hCtl_test_TextBox1 $port
  ${If} $port == ""
     MessageBox MB_USERICON|MB_OK  "The port can't be empty!"
       Abort
  ${ElseIf} $port L> 44399
    MessageBox MB_USERICON|MB_OK  "The port cannot be greater than 44399!"
       Abort
 ${ElseIf} $port L< 44300
    MessageBox MB_USERICON|MB_OK  "The port cannot be smaller than 44300!"
      Abort

  ${EndIf}
 go:
 ${If} ${TCPPortOpen} $port
      MessageBox MB_OK "The port $port has been occupied, please change it."
      Abort
 ${EndIf}
FunctionEnd

Function checkInput
   Call ipCheck
   Call portCheck
FunctionEnd

Function CheckOS
	${If} ${RunningX64}
		SetRegView 64
	${Else}
		SetRegView 32
	${EndIf}
FunctionEnd

# Function CheckSCOMIsRuning
# 	${nsProcess::FindProcess} "Microsoft.EnterpriseManagement.Monitoring.Console.exe" $R0
# 	StrCmp $R0 "0" On_Abort End
# 	On_Abort:
# 		MessageBox MB_USERICON|MB_OK|MB_TOPMOST "$(Lan_CheckSCOMIsRuning_Msg)"
# 		Abort
# 	End:
		
# FunctionEnd

Function IsNet40Installed
	;LogText "Checking .Net frameworker4.0..."

	Push $R0
	Push $R1
	ReadRegDWORD $R0 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full" "Install"
	ReadRegDWORD $R1 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full" "Version"
	
	;LogText ".Net frameworker install status is: $R0"
;	LogText ".Net frameworker version is: $R1"
	
	${If} $R0 == 1
		${If} $R1 >= "4.0.30319"
			StrCpy $R0 "Yes"
			StrCpy $IC_DN40 $R0
			;LogText "IC_DN40 Value is: $IC_DN40"
			goto lbl_?net40idone
		${EndIf}
	${EndIf}

	StrCpy $R0 "No"
	StrCpy $IC_DN40 $R0
	;LogText "IC_DN40 Value is: $IC_DN40"
	
	lbl_?net40idone:

	Pop $R1
	Exch $R0
FunctionEnd

Function CheckNF
	Call IsNet40Installed
	${If} $IC_DN40 == 'No'
		MessageBox MB_USERICON|MB_OK|MB_TOPMOST "$(Lan_CheckNF_Msg)"
		Abort
	${EndIf}
FunctionEnd

Function IsSCOMInstalled
	;LogText "Checking SCOM..."

	Push $R0
	Push $R1
	ReadRegDWORD $R1 HKLM "SOFTWARE\Microsoft\System Center Operations Manager\12\Setup" "ProductName"
	;LogText "SCOM ProductName is: $R1"
	
	${If} $R1 != ""
		StrCpy $R0 "Yes"
		StrCpy $IC_SCOM $R0
		;LogText "IC_SCOM Value is: $IC_SCOM"
		goto lbl_?sccmdone
	${EndIf}

	StrCpy $R0 "No"
	StrCpy $IC_SCOM $R0
	;LogText "IC_SCOM Value is: $IC_SCOM"
	
	lbl_?sccmdone:

	Pop $R1
	Exch $R0
FunctionEnd

Function CheckSCOM
	;LogText "Checking SCOM ccc..."
	Call IsSCOMInstalled
	${If} $IC_SCOM == 'No'
		MessageBox MB_USERICON|MB_OK|MB_TOPMOST "$(Lan_CheckSCOM_Msg)"
		Abort
	${EndIf}
FunctionEnd

Var UNINSTALL_PROG
Var OLD_VER
;Var OLD_PATH

Function CheckSCOMPluginIsInstall
 
  ReadRegStr $UNINSTALL_PROG HKLM "Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" "UninstallString"
  ;ReadRegStr $OLD_PATH HKLM "Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" "UninstallString"
 
  ReadRegStr $OLD_VER HKLM "Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" "DisplayVersion"
  ${If} $OLD_VER = ""
	goto norun
  ${EndIf}
  
  MessageBox MB_ICONQuESTION|MB_YESNO "You already installed ${PRODUCT_NAME} $OLD_VER,do you want to uninstall the installed version?$\n(After uninstall successfully, please run the installation package again.)" IDYES keep IDNO none
  keep:
    ExecWait '$UNINSTALL_PROG'
    Abort
  none:
    Quit
  norun:
    
FunctionEnd






